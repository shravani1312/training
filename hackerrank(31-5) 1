import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;


class Result {

    /*
     * Complete the 'largestArea' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts 2D_INTEGER_ARRAY samples as parameter.
     */

    public static int largestArea(int[][] samples) {
    int i,j;
    int n=samples.length;
    int m=samples[0].length;
    int s[][]=new int[n][m];
    int smaxm,imax,jmax;
    for(i=0;i<n;i++);
    s[i][0]=samples[i][0];
    for(j=0;j<m;j++)
    s[0][j]=samples[0][j];
    for(i=1;i<n;i++)
    {
        for(j=;j<m;j++)
        {
            if(samples[i][j]==)
              s[i][j]=Math.min(s[i][j-1],Math.min(s[i-1][j]),s[i-1][j-1]))+1;
            else
                s[i][j];
              
        }
    }
    smaxm=s[0][0];
    imax=0;jmax=0;
    for(i=0;i<n;<i++)
    {
        for(j=0;j<m;j++)
        {
            if(smaxm<s[i][j])
            {
                smaxm=s[i][j];
                imax=i;
                jmax=j;
            
            }
        }
    }
    return imax;
}


}

public class Solution {
